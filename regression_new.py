# -*- coding: utf-8 -*-
"""regression new

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X700PswQ2bU1V5_FZtWeJcSFLTgHPjDZ
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('/content/Mastercard_stock_history.csv')
df

df.head(10)

df.tail()

df.isnull().sum()

df.nunique()

df.shape

df.info()

df.describe()

corr = df.corr()
corr

import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

df = pd.read_csv('/content/Mastercard_stock_history.csv')


X = df[['Open', 'High', 'Low', 'Volume']]
y = df[['Close']]


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


regressor = LinearRegression()
regressor.fit(X_train, y_train)


y_pred = regressor.predict(X_test)

mse = mean_squared_error(y_test, y_pred)

print(f'MSE: {mse}')
print(f"R²: {regressor.score(X_test, y_test)}")


plt.scatter(y_test, y_pred, color='blue')
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], linestyle='--', color='red', linewidth=2)
plt.xlabel('Valor Real')
plt.ylabel('Valor Previsto')
plt.title('Regressão Linear - Preço de Fechamento')
plt.show()

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import mean_squared_error
import pandas as pd


df = pd.read_csv('/content/Mastercard_stock_history.csv')


X = df[['Open', 'High', 'Low', 'Volume']]
y = df['Close']


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)


k = 4
model = KNeighborsRegressor(n_neighbors = k)


model.fit(X_train, y_train)


y_pred = model.predict(X_test)



mse = mean_squared_error(y_test, y_pred)
print(f'MSE: {mse}')
print(f"R²: {model.score(X_test, y_test)}")

import matplotlib.pyplot as plt


plt.figure(figsize=(10, 6))
plt.plot(y_test.values, label='Valores Reais')
plt.plot(y_pred, label='Previsões kNN')
plt.title('Valores Reais vs Previsões kNN')
plt.xlabel('Índice')
plt.ylabel('Preço de Fechamento')
plt.legend()
plt.show()

from sklearn.metrics import mean_squared_error


mse_scores = []


for k in range(1, 11):
    model = KNeighborsRegressor(n_neighbors=k)
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    mse = mean_squared_error(y_test, y_pred)
    mse_scores.append(mse)

plt.figure(figsize=(10, 6))
plt.plot(range(1, 11), mse_scores, marker='o')
plt.title('Erro Quadrático Médio do modelo kNN para diferentes números de vizinhos')
plt.xlabel('Número de vizinhos')
plt.ylabel('Erro Quadrático Médio (MSE)')
plt.show()